{"version":3,"file":"static/webpack/static/development/pages/index.js.8523c20a8a9e879b08ad.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\nimport Head from 'next/head'\nlet WebFont;\nif (process.browser) {\n  WebFont = require('webfontloader')\n}\n\nimport '../styles/index.scss'\n\nfunction useInput(initialValue = '', target = 'value') {\n  const [value, setValue] = useState(initialValue)\n\n  const setter = e => {\n    setValue(e.target[target])\n  }\n  return [\n    value,\n    setter\n  ]\n}\n\nfunction Canvas({ text, color, width, height, fontSize, fontFamily, padding, bold, italic }) {\n\n  const canvas = useRef(null)\n  const ctx = useRef(null)\n\n  const [loadingFont, setLoadingFont] = useState(false)\n\n  useEffect(() => {\n    ctx.current = canvas.current.getContext('2d')\n\n    // for retina\n    canvas.current.width = width * 2\n    canvas.current.height = height * 2\n    canvas.current.style.width = `${width}px`\n    canvas.current.style.height = `${height}px`\n\n    WebFont.load({\n      loading() {\n        setLoadingFont(true)\n      },\n      active() {\n        drawText()\n        setLoadingFont(false)\n      },\n      inactive() {\n        setLoadingFont(false)\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [fontFamily]\n      },\n      loading() {\n        setLoadingFont(true)\n      },\n      active() {\n        drawText()\n        setLoadingFont(false)\n      },\n      inactive() {\n        setLoadingFont(false)\n      }\n    })\n  }, [fontFamily])\n\n  useEffect(drawText, [text, color, fontFamily, width, height, padding, fontSize, bold, italic])\n\n  function drawText() {\n    const measure = ctx.current.measureText(text)\n\n    // const fontSize = height - padding * 2\n    const fontProperties = []\n\n    if (italic) { fontProperties.push('italic') }\n    if (bold) { fontProperties.push('bold') }\n\n    fontProperties.push(`${fontSize * 2}px`)\n    fontProperties.push(fontFamily)\n    ctx.current.font = fontProperties.filter(Boolean).join(' ');\n    ctx.current.textAlign = 'center'\n    ctx.current.textBaseline = 'middle'\n\n    // clear canvas\n    ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height);\n\n    // draw text\n    ctx.current.fillStyle = color\n    ctx.current.fillText(text, width / 2, height / 2)\n  }\n\n  return (\n    <div>\n      <div className='card' style={{ width, height }}>\n        <canvas style={{ visibility: loadingFont ? 'hidden' : 'visible' }} width={width} height={height} ref={canvas}></canvas>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const [name, setName] = useInput('Picas')\n  const [fontSize, setFontSize] = useInput(256)\n  const [color, setColor] = useInput('#c62828')\n  const [fontFamilyInput, setFontFamilyInput] = useInput('Fredericka the Great')\n  const [fontFamily, setFontFamily] = useInput('Fredericka the Great')\n  const [bold, setBold] = useInput(false, 'checked')\n  const [italic, setItalic] = useInput(true, 'checked')\n\n\n  const onClickChangeFont = () => {\n    setFontFamily({ target: { value: fontFamilyInput } })\n  }\n\n  const big = {\n    width: 1024,\n    height: 1024 * 0.618 / 2\n  }\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Picas - Generate Project Logo with Google Fonts</title>\n      </Head>\n      <div dangerouslySetInnerHTML={{ __html: '<a href=\"https://your-url\" class=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#FD6C6C; color:#fff; position: absolute; top: 0; border: 0; right: 0;\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>' }} />\n      <div style={{ width: '960px', margin: '0 auto' }}>\n        <div style={{ margin: '36px auto', width: big.width, marginBottom: '0px' }}>\n          <Canvas\n            padding={0}\n            text={name}\n            width={big.width}\n            height={big.height}\n            color={color}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            bold={bold}\n            italic={italic}\n          />\n        </div>\n        <div className=\"is-size-4\" style={{ textAlign: 'center', padding: '2rem' }}>\n        <span>Generate Project Logo with Google Fonts</span>\n      </div>\n\n        <div>\n          <div className=\"field\">\n            <label className=\"label\">Product name</label>\n            <input className=\"input\" defaultValue={name} onChange={setName} />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Font size</label>\n            <input className=\"input\" defaultValue={fontSize} onChange={setFontSize} type='number' />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Font color</label>\n            <input className=\"input\" defaultValue={color} onChange={setColor} type='color' />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Font family</label>\n            <div className=\"field has-addons\">\n              <div className=\"control\">\n                <input className=\"input\" defaultValue={fontFamilyInput} onChange={setFontFamilyInput} />\n              </div>\n              <div className=\"control\">\n                <a className=\"button\" onClick={onClickChangeFont}>Change</a>\n              </div>\n            </div>\n            <div>✍️ Find font on <a href=\"https://fonts.google.com/\"> Google Font </a></div>\n          </div>\n          <div className=\"field\">\n            <label className=\"checkbox\" style={{ marginRight: '1rem' }}>\n              <input defaultChecked={bold} onChange={setBold} type='checkbox' />bold\n            </label>\n            <label className=\"checkbox\">\n              <input defaultChecked={italic} onChange={setItalic} type='checkbox' />italic\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"is-size-7\" style={{ textAlign: 'center', padding: '2rem' }}>\n        Made by <a href=\"https://github.com/djyde\">Randy</a>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default App\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}